#define ZMK_POINTING_DEFAULT_MOVE_VAL 2400  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/stp.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <500>;
    trigger-period-ms = <8>;
};

&msc {
    acceleration-exponent = <0>;
    time-to-max-speed-ms = <300>;
    trigger-period-ms = <8>;
};

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
        };

        Sticky_Lazy: Sticky_Lazy {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_LAZY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            lazy;
        };

        hold_quick_tap: hold_quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <0>;
        };

        e_SQT_LPAR: e_SQT_LPAR {
            compatible = "zmk,behavior-mod-morph";
            label = "E_SQT_LPAR";
            bindings = <&kp SQT>, <&kp LPAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_DQT_RPAR: e_DQT_RPAR {
            compatible = "zmk,behavior-mod-morph";
            label = "E_DQT_RPAR";
            bindings = <&kp DQT>, <&kp RPAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_com_semi: e_com_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "E_COM_SEMI";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_under_equals: e_under_equals {
            compatible = "zmk,behavior-mod-morph";
            label = "E_UNDER_EQUALS";
            bindings = <&kp UNDER>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_Qmark_Excl: e_Qmark_Excl {
            compatible = "zmk,behavior-mod-morph";
            label = "E_QMARK_EXCL";
            bindings = <&kp QMARK>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_period_colon: e_period_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "E_PERIOD_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_7_Fslash: e_7_Fslash {
            compatible = "zmk,behavior-mod-morph";
            label = "E_7_FSLASH";
            bindings = <&kp N7>, <&kp SLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_9_minus: e_9_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "E_9_MINUS";
            bindings = <&kp N9>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_0_plus: e_0_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "E_0_PLUS";
            bindings = <&kp N0>, <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_backslash: e_backslash {
            compatible = "zmk,behavior-mod-morph";
            label = "E_BACKSLASH";
            bindings = <&kp BACKSLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_slash: e_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "E_SLASH";
            bindings = <&kp SLASH>, <&kp SLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        e_and_or: e_and_or {
            compatible = "zmk,behavior-mod-morph";
            label = "E_AND_OR";
            bindings = <&kp AMPS>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        pp_next_prev_tap_dance: pp_next_prev_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "PP_NEXT_PREV_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        c_vol_up_down_tap_dance: c_vol_up_down_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "C_VOL_UP_DOWN_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        Gui_screen_cap_tap_dance: Gui_screen_cap_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_SCREEN_CAP_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LS(LG(S))>;
        };

        e_equals: e_equals {
            compatible = "zmk,behavior-mod-morph";
            label = "E_EQUALS";
            bindings = <&kp EQUAL>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        C_CAPSLOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <67 68>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3    &kp N4     &kp N5  &tog 1                                                                &mo 4        &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E     &kp R      &kp T   &none                                                                 &key_repeat  &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S   &kp D     &kp F      &kp G   &none           &kp LEFT_CONTROL  &kp LALT      &kp LGUI   &kp RCTRL  &kp CAPS     &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp DEL    &kp Z      &kp X   &kp C     &kp V      &kp B                                     &kp HOME      &kp PG_UP                          &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp BACKSPACE
&mo 3      &kp GRAVE  &mo 2   &kp LEFT  &kp RIGHT          &kp LEFT_SHIFT  &mo 2             &kp END       &kp PG_DN  &kp ENTER  &kp SPACE            &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 3
            >;
        };

        engram {
            bindings = <
&kp GRAVE  &kp N1    &kp N2  &kp N3    &kp N4     &kp N5       &trans                                                                                               &mo 4         &kp N6           &e_7_Fslash  &kp N8    &e_9_minus  &e_0_plus  &kp UNDER
&kp TAB    &kp B     &kp Y   &kp O     &kp U      &e_SQT_LPAR  &e_backslash                                                                                         &kp KP_SLASH  &e_DQT_RPAR      &kp L        &kp D     &kp W       &kp V      &kp Z
&kp ESC    &kp C     &kp I   &kp E     &kp A      &e_com_semi  &kp AMPS      &kp LEFT_CONTROL  &Gui_screen_cap_tap_dance      &Gui_screen_cap_tap_dance  &kp RCTRL  &kp PIPE      &e_period_colon  &kp H        &kp T     &kp S       &kp N      &kp Q
&kp DEL    &kp G     &kp X   &kp J     &kp K      &e_equals                                    &c_vol_up_down_tap_dance       &pp_next_prev_tap_dance                             &e_Qmark_Excl    &kp R        &kp M     &kp F       &kp P      &kp BACKSPACE
&mo 3      &kp LBKT  &kp LT  &kp LEFT  &kp RIGHT               &kp LSHIFT    &mo 2             &kp LEFT_ALT                   &kp LEFT_ALT               &kp ENTER  &kp SPACE                      &kp UP       &kp DOWN  &kp GT      &kp RBKT   &mo 3
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp INSERT                                      &kp KP_NUMLOCK  &kp CARET  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans          &trans     &kp KP_N7      &kp KP_N8        &kp KP_N9     &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans      &trans  &trans  &trans          &trans     &kp KP_N4      &kp KP_N5        &kp KP_N6     &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans      &trans                          &trans     &kp KP_N1      &kp KP_N2        &kp KP_N3     &kp ENTER  &trans
&trans  &trans  &trans  &trans  &trans          &trans      &trans  &trans      &trans  &trans  &kp KP_N0                  &trans         &trans           &kp DOT       &kp ENTER  &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5   &kp F6  &tog 2                                               &mo 4      &kp F7  &kp F8          &kp F9          &kp F10          &kp F11  &kp F12
&trans  &trans  &trans  &trans    &trans   &trans  &trans                                               &trans     &trans  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans   &trans
&trans  &trans  &trans  &trans    &trans   &trans  &trans     &trans     &trans      &trans  &trans     &trans     &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans   &trans
&trans  &trans  &trans  &trans    &trans   &trans                        &trans      &trans                        &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans   &trans
&trans  &trans  &trans  &kp HOME  &kp END          &mkp LCLK  &mkp RCLK  &trans      &trans  &mkp LCLK  &mkp RCLK          &kp PAGE_UP     &kp PAGE_DOWN   &trans           &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &trans       &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
