#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        Auto_Shift: Auto_Shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <65 70>;
            retro-tap;
        };

        Tap_Repeat: Tap_Repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_REPEAT";
            bindings = <&kp>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            retro-tap;
        };

        Sticky_Lazy: Sticky_Lazy {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_LAZY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            lazy;
        };

        Hold_Tap_Sticky: Hold_Tap_Sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_STICKY";
            bindings = <&kp>, <&Sticky_Lazy>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <500>;
            hold-while-undecided;
            retro-tap;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&Auto_Shift LS(EQUAL) EQUAL   &Auto_Shift LS(N1) N1        &Auto_Shift LS(N2) N2  &Auto_Shift LS(N3) N3  &Auto_Shift LS(N4) N4  &Auto_Shift LS(N5) N5  &tog 1                                                                                                 &mo 3      &Auto_Shift RS(N6) N6  &Auto_Shift RS(N7) N7  &Auto_Shift RS(N8) N8        &Auto_Shift RS(N9) N9      &Auto_Shift RS(N0) N0      &Auto_Shift RS(MINUS) MINUS
&kp TAB                       &Auto_Shift LS(Q) Q          &Auto_Shift LS(W) W    &Auto_Shift LS(E) E    &Auto_Shift LS(R) R    &Auto_Shift LS(T) T    &none                                                                                                  &none      &Auto_Shift RS(Y) Y    &Auto_Shift RS(U) U    &Auto_Shift RS(I) I          &Auto_Shift RS(O) O        &Auto_Shift RS(P) P        &Auto_Shift RS(BSLH) BSLH
&kp ESC                       &Auto_Shift LS(A) A          &Auto_Shift LS(S) S    &Auto_Shift LS(D) D    &Auto_Shift LS(F) F    &Auto_Shift LS(G) G    &none     &Tap_Repeat LEFT_CONTROL 0  &Hold_Tap_Sticky LALT LSHFT      &kp LGUI   &Tap_Repeat RCTRL 0  &none      &Auto_Shift RS(H) H    &Auto_Shift RS(J) J    &Auto_Shift RS(K) K          &Auto_Shift RS(L) L        &Auto_Shift RS(SEMI) SEMI  &Auto_Shift RS(SQT) SQT
&Hold_Tap_Sticky LSHFT LSHFT  &Auto_Shift LS(Z) Z          &Auto_Shift LS(X) X    &Auto_Shift LS(C) C    &Auto_Shift LS(V) V    &Auto_Shift LS(B) B                                          &kp HOME                         &kp PG_UP                                  &Auto_Shift RS(N) N    &Auto_Shift RS(M) M    &Auto_Shift RS(COMMA) COMMA  &Auto_Shift RS(DOT) DOT    &Auto_Shift RS(FSLH) FSLH  &Hold_Tap_Sticky RSHFT RSHFT
&mo 2                         &Auto_Shift LS(GRAVE) GRAVE  &kp CAPS               &kp LEFT               &kp RIGHT                                     &kp BSPC  &kp DEL                     &kp END                          &kp PG_DN  &kp ENTER            &kp SPACE                         &kp UP                 &kp DOWN                     &Auto_Shift RS(LBKT) LBKT  &Auto_Shift RS(RBKT) RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
