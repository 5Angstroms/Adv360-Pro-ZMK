#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
        };

        Auto_Shift: Auto_Shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <200>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <65 70>;
            retro-tap;
        };

        Tap_Repeat: Tap_Repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_REPEAT";
            bindings = <&kp>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            retro-tap;
        };

        Sticky_Lazy: Sticky_Lazy {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_LAZY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            lazy;
        };

        Hold_Tap_Sticky: Hold_Tap_Sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_STICKY";
            bindings = <&kp>, <&Sticky_Lazy>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <500>;
            hold-while-undecided;
            retro-tap;
        };

        TapKey_HoldMod: TapKey_HoldMod {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPKEY_HOLDMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <5000>;
            hold-while-undecided;
            retro-tap;
        };

        custom_shift: custom_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "CUSTOM_SHIFT";
            bindings = <&kp SQT>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        engram_SQT: engram_SQT {
            compatible = "zmk,behavior-mod-morph";
            label = "ENGRAM_SQT";
            bindings = <&kp SQT>, <&kp LPAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        Combo_Caps {
            bindings = <&kp CAPS>;
            key-positions = <66 69>;
            layers = <0>;
        };

        Combo_Tab {
            bindings = <&kp TAB>;
            key-positions = <32 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp EQUAL                     &kp N1     &kp N2  &kp N3       &kp N4       &kp N5  &tog 2                                                                                                         &mo 4             &kp N6  &kp N7       &kp N8       &kp N9    &kp N0    &kp MINUS
&kp TAB                       &kp Q      &kp W   &kp E        &kp R        &kp T   &to 0                                                                                                          &kp C_PLAY_PAUSE  &kp Y   &kp U        &kp I        &kp O     &kp P     &kp BSLH
&kp ESC                       &kp A      &kp S   &hm LCTRL D  &hm LSHFT F  &kp G   &to 1     &Tap_Repeat LEFT_CONTROL 0  &Hold_Tap_Sticky LALT LSHFT      &kp LGUI   &Tap_Repeat RCTRL 0          &kp CAPS          &kp H   &hm RSHFT J  &hm RCTRL K  &kp L     &kp SEMI  &kp SQT
&Hold_Tap_Sticky LSHFT LSHFT  &kp Z      &kp X   &kp C        &kp V        &kp B                                         &kp HOME                         &kp PG_UP                                                 &kp N   &kp M        &kp COMMA    &kp DOT   &kp FSLH  &Hold_Tap_Sticky RSHFT RSHFT
&mo 3                         &kp GRAVE  &mo 2   &kp LEFT     &kp RIGHT            &kp BSPC  &TapKey_HoldMod LSHFT DEL   &kp END                          &kp PG_DN  &TapKey_HoldMod RSHFT ENTER  &kp SPACE                 &kp UP       &kp DOWN     &kp LBKT  &kp RBKT  &mo 3
            >;
        };

        engram {
            bindings = <
&kp EQUAL                     &kp N1     &kp N2  &kp N3       &kp N4       &kp N5       &tog 2                                                                                                         &mo 4             &kp N6  &kp N7       &kp N8       &kp N9    &kp N0    &kp MINUS
&kp TAB                       &kp B      &kp Y   &kp O        &kp U        &engram_SQT  &to 0                                                                                                          &kp C_PLAY_PAUSE  &kp Y   &kp U        &kp I        &kp O     &kp P     &kp BSLH
&kp ESC                       &kp A      &kp S   &hm LCTRL D  &hm LSHFT F  &kp G        &to 1     &Tap_Repeat LEFT_CONTROL 0  &Hold_Tap_Sticky LALT LSHFT      &kp LGUI   &Tap_Repeat RCTRL 0          &kp CAPS          &kp H   &hm RSHFT J  &hm RCTRL K  &kp L     &kp SEMI  &kp SQT
&Hold_Tap_Sticky LSHFT LSHFT  &kp Z      &kp X   &kp C        &kp V        &kp B                                              &kp HOME                         &kp PG_UP                                                 &kp N   &kp M        &kp COMMA    &kp DOT   &kp FSLH  &Hold_Tap_Sticky RSHFT RSHFT
&mo 3                         &kp GRAVE  &mo 2   &kp LEFT     &kp RIGHT                 &kp BSPC  &TapKey_HoldMod LSHFT DEL   &kp END                          &kp PG_DN  &TapKey_HoldMod RSHFT ENTER  &kp SPACE                 &kp UP       &kp DOWN     &kp LBKT  &kp RBKT  &mo 3
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 4              &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &trans                                                   &kp C_VOLUME_UP    &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &trans    &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kp C_VOLUME_DOWN  &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                                &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0                  &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 3
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 2                                      &mo 4   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &trans       &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
